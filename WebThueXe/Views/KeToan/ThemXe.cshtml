@model WebThueXe.Models.Xe

@{
    ViewBag.Title = "ThemXe";
    Layout = "~/Views/Shared/_LayoutKeToan.cshtml";
}



<h2>ThemXe</h2>

@using (Html.BeginForm("ThemXe", "KeToan", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <table class="table">
            <tbody>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.tenXe)</th>
                    <td>
                        @Html.EditorFor(model => model.tenXe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tenXe, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.bienSo)</th>
                    <td>
                        @Html.EditorFor(model => model.bienSo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.bienSo, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.giaXe)</th>
                    <td>
                        @Html.EditorFor(model => model.giaXe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.giaXe, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.moTaXe)</th>
                    <td>
                        @Html.EditorFor(model => model.moTaXe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.moTaXe, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.TinhTrangXe.tenTinhTrangXe)</th>
                    <td>
                        @Html.DropDownListFor(model => model.maTinhTrangXe, ViewBag.DsTinhTrangXe as SelectList, "-- chọn tình trạng xe --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.maTinhTrangXe, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.giaThueXe)</th>
                    <td>
                        @Html.EditorFor(model => model.giaThueXe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.giaThueXe, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.LoaiXe.tenLoaiXe)</th>
                    <td>
                        @Html.DropDownListFor(model => model.maLoaiXe, ViewBag.DsLoaiXe as SelectList, "-- chọn loại xe --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.maLoaiXe, "", new { @class = "text-danger" })

                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.HieuXe.tenHieuXe)</th>
                    <td>
                        @Html.DropDownListFor(model => model.maHieuXe, ViewBag.DsHieuXe as SelectList, "-- chọn hiệu xe --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.maHieuXe, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.hinh)</th>
                    <td>
                        <img src="@Url.Content(Model.hinh)" height="150" width="150" id="previewImg" />
                        <input type="file" name="UploadImage" onchange="ChangeImage(this, document.getElementById('previewImg'))" />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                    </td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.hinhplus)</th>
                    <td>
                        <input type="file" id="flImage" name="ImageUpload" onchange='UploadTempImage()' class="form-control">
                        <div id="imageList"></div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "QuanLyXe")
</div>

<script src="~/Scripts/jquery-3.6.0.js"></script>
<script>
    function UploadTempImage() {
        var formData = new FormData();
        formData.append('file', $('#flImage')[0].files[0]);
        $.ajax({
            type: "POST",
            url: "/KeToan/SaveToTemp",
            data: formData,
            success: function (response) {
                if (response != null) {
                    var my_path = "/Content/tmp/" + response;
                    $("#imageList").append('<div style="float:left"><img src="' + my_path + '" width="200" height="150"/><a href="#" class="btn-delImage"><span aria-hidden="true">&times;</span></a></div>')
                    $(".btn-delImage").click(function () {
                        var text = $(this).parent().children().prop("src");
                        var sub = text.substr(text.indexOf('C'), text.length);
                        $(this).parent().remove();
                        console.log(sub);
                        $.ajax({
                            type: "POST",
                            url: "/KeToan/RemoveFile",
                            dataType: "json",
                            data: {
                                url: sub
                            },
                            success: function (response2) {
                                if (response2 != null) {
                                    console.log(response2);
                                }
                            },
                            error: function () {
                                alert("Whoops something went wrong 2!");
                            }
                        });
                    })
                }
            },
            processData: false,
            contentType: false,
            error: function () {
                alert("Whoops something went wrong!");
            }
        });
    }
</script>
<script src="~/Scripts/script.js"></script>
@*@section script{
    <script src="~/Scripts/script.js"></script>
    
}*@
